#CLASS {RL_GMCP} {kill};
#CLASS {RL_GMCP} {open};

/**********************************************************************************************************************
 * Module RL_GMCP                                                                                                     *
 *                                                                                                                    *
 * GMCP support module.                                                                                               *
 **********************************************************************************************************************/

/register_module {RL_GMCP} {GMCP} {Soport para GMCP.};

/**********************************************************************************************************************
 * Variables                                                                                                          *
 **********************************************************************************************************************/

#VAR {rl_gmcp} {};
#VAR {rl_gmcp.debug} {1};

#FORMAT {rl_gmcp.IAC} {%a} {255};
#FORMAT {rl_gmcp.DONT} {%a} {254};
#FORMAT {rl_gmcp.DO} {%a} {253};
#FORMAT {rl_gmcp.WONT} {%a} {252};
#FORMAT {rl_gmcp.WILL} {%a} {251};
#FORMAT {rl_gmcp.SB} {%a} {250};
#FORMAT {rl_gmcp.SE} {%a} {240};
#FORMAT {rl_gmcp.GMCP} {%a} {201};

/**********************************************************************************************************************
 * Events                                                                                                             *
 **********************************************************************************************************************/

#EVENT {IAC WILL GMCP} {
    #IF {$rl_gmcp.debug == 1} {
        /message {Subscribing to GMCP modules};
    };
    #SEND {$rl_gmcp[IAC]$rl_gmcp[DO]$rl_gmcp[GMCP]\};
    #SEND {$rl_gmcp[IAC]$rl_gmcp[SB]${rl_gmcp[GMCP]}Core.Hello { "client": "RL++", "version": "0.2.0" }$rl_gmcp[IAC]$rl_gmcp[SE]\};
    #SEND {$rl_gmcp[IAC]$rl_gmcp[SB]${rl_gmcp[GMCP]}Core.Supports.Add ["Char 1", "Char.Skills 1", "Char.Items 1", "Room 1", "IRE.Rift 1", "Ire.Composer 1", "Comm 1"]$rl_gmcp[IAC]$rl_gmcp[SE]\};
};

#EVENT {IAC SB GMCP Client.GUI IAC SE} {
    #IF {rl_gmcp.debug == 1} {
        /message {Received GMCP Client.GUI event};
    };
};

#EVENT {IAC SB GMCP Char.Ficha IAC SE} {
    #SHOWME {=== RECEIVED GMCP Char.Ficha ===};
    #SHOWME {[%1]};
};

#EVENT {IAC SB GMCP Char.Status IAC SE} {
    #SHOWME {=== RECEIVED GMCP Char.Status ===};
    #VAR {rl_gmcp.char.status} {%0};
    #SHOWME {[%1]};
};

#EVENT {IAC SB GMCP Comm.Canales IAC SE} {
    #SHOWME {=== RECEIVED GMCP Char.Canales ===};
    #SHOWME {[%1]};
};

#EVENT {IAC SB GMCP Mapa IAC SE} {
    #SHOWME {=== RECEIVED GMCP Mapa ===};
    #SHOWME {[%1]};
};

/**********************************************************************************************************************
 * Testing                                                                                                            *
 **********************************************************************************************************************/

#IF {$_development == 1} {
    #ALIAS {/test_RL_GMCP} {
        #SHOWME {No tests implemented.};
    };
};

#CLASS {RL_GMCP} {close};
